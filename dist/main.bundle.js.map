{"version":3,"sources":["webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src async","webpack:///./src/main.ts","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/filegen.service.ts","webpack:///./src/environments/environment.ts"],"names":[],"mappings":"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","file":"main.bundle.js","sourcesContent":["exports = module.exports = require(\"../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.css\n// module id = 135\n// module chunks = 1","module.exports = \"<div>\\n  <h1>File Generator</h1>\\n  <span>Use the checkboxes to form value to use</span>\\n  <div *ngFor=\\\"let check of checks\\\">\\n    <input type=\\\"checkbox\\\" *ngFor=\\\"let box of check\\\" [(ngModel)]=\\\"box.selected\\\">\\n  </div>\\n  <div>\\n    <span>Enter actual value from checkboxes: </span><input #number type=\\\"text\\\">\\n  </div>\\n  <div>\\n    <button (click)=\\\"generateFile(number)\\\">Generate</button>\\n  </div>\\n  <span>{{message}}</span>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/app/app.component.html\n// module id = 137\n// module chunks = 1","function webpackEmptyContext(req) {\n\tthrow new Error(\"Cannot find module '\" + req + \"'.\");\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 71;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src async\n// module id = 71\n// module chunks = 1","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule);\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.ts","import { Component } from '@angular/core';\nimport { HttpModule, JsonpModule } from '@angular/http';\nimport { FileGenService } from './filegen.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  providers: [ FileGenService ]\n})\nexport class AppComponent {\n  public checks: {selected: boolean}[][] = [];\n  public message: string = '';\n  constructor(private fileGenService: FileGenService) {\n    const width = 5;\n    const height = 7;\n    for(var i = 0; i < height; ++i) {\n      this.checks[i] = [];\n      for(var j = 0; j < width; ++j) {\n        this.checks[i][j] = {selected: false};\n      }\n    }\n  }\n  generateFile(number) {\n    debugger;\n    var params = {number: parseInt(number.value), values: this.checks};\n    this.fileGenService.generateFile(params).subscribe(value => {\n      this.message = value;\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.component.ts","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { HttpModule } from '@angular/http';\n\nimport { AppComponent } from './app.component';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    HttpModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n\n\n\n// WEBPACK FOOTER //\n// ./src/app/app.module.ts","import { Injectable } from '@angular/core';\nimport { Http, Response } from '@angular/http';\n\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/catch';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class FileGenService {\n    private fileGenUrl = 'api/genfile';\n    constructor(private http: Http) {}\n    generateFile(data) : Observable<string> {\n        return this.http.post(this.fileGenUrl, data)\n                        .map(this.extract)\n                        .catch(this.handleError);\n    }\n    private extract(res: Response) {\n        let body = res.json();\n        return body.message || '';\n    }\n    private handleError(error: Response | any, caught: Observable<any>) : Observable<any> {\n        let errMsg: string;\n        if(error instanceof Response) {\n            const body = error.json() || '';\n            const err = body.error || JSON.stringify(body);\n            errMsg = `${error.status} - ${error.statusText || ''} ${err}`;\n        } else {\n            errMsg = error.message ? error.message : error.toString();\n        }\n        return Observable.throw(errMsg);\n    }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/app/filegen.service.ts","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/environments/environment.ts"],"sourceRoot":""}